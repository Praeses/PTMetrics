@model PTMetrics.Models.StoryBreakdownVM

@{
    ViewBag.Title = "title";
}

<h2>Stories</h2>
<section id="charts">
<div id="piechart" style="width: auto; height: auto; margin: 0 auto"></div>
</section>
<button id="pie">reset</button>​

@section scripts{
    <script type="text/javascript">
        $(function () {
            var chart,
                drilldata = @Model.dataStories;
    
            $(document).ready(function () {

                $("#pie").bind('click', function () { chart.setChart(true); });
    	
            // Build the chart
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: 'piechart',
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false
                },
                title: {
                    text: 'Project Stories'
                },
                tooltip: {
        	       
        	        formatter: function () {
        	            var point = this.point,
                            s = point.name + ':<b>' + this.y + '%</b><br/>';
        	            if (point.drilldown) {
        	                s = point.name + ':<b>' + this.y + '</b><br/>';
        	                s += 'Click to view ' + point.name + ' stories';
        	            } else {
        	                s = point.name + ':<b>' + this.y + '</b><br/>';
        	                s += 'Click reset to return to project breakdown';
        	            }
        	            return s;
        	        }
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: false
                        },
                        showInLegend: true,
                        point: {
                            events: {
                                click: function () {
                                    var chart = this.series.chart,
                                        drilldown = this.drilldown;
                                    if (drilldown) { // drill down
                                        chart.setChart(drilldown.name, drilldown.data);
                                    }
                                }
                            }
                        },
                    }
                },
                series: [{
                    type: 'pie',
                    name: 'Stories',
                    data: drilldata
                }]
            }, function (chart) {

                chart.upper = [];

                var up = false;

                chart.setChart = function (name, data) {
                    if (name === true && chart.upper.length > 0) {
                        chart.series[0].remove();
                        chart.addSeries(chart.upper.pop());

                        if (chart.upper.length === 0) {
                            $("#pie").hide('up');
                            up = false;
                        }
                        return true;
                    }

                    if (up === false) {
                        $("#pie").show();
                        up = true;
                    }

                    chart.upper.push(chart.series[0].options);
                    chart.series[0].remove();
                    chart.addSeries({
                        type: 'pie',
                        name: name,
                        data: data
                    });
                }



            });
        });
    
        });
    </script>
}